@page "/"
@layout MainLayout
@inject WalletVM walletVM
<div>
    <br>
    <h1 class="text-light">My Wallet</h1>
    <br>
    <h3 class="text-warning">@walletVM.Balance.ToString("C")</h3>
    <h6>Total balance</h6>
    <button class="btn btn-success" @onclick='() => OpenModal("Deposit")'>Deposit</button>
    <button class="btn btn-danger" @onclick='() => OpenModal("Withdraw")'>Withdraw</button>

    @if (showModal)
    {
        <ModalWallet 
            ActionType="@modalAction" 
            OnConfirmed="HandleTransaction" 
            Balance="@walletVM.Balance"
            OnCancelled="@(() => showModal = false)" 
        />
    }
    <h4 class="mt-4">Transaction History</h4>
    <div class="table-responsive d-flex justify-content-center">
        <table class="table table-striped table-hover table-borderless align-middle shadow-sm rounded-3"
            style="max-width: 700px;">
            <thead class="table-light">
                <tr>
                    <th class="text-center">Type</th>
                    <th class="text-center">Amount</th>
                    <th class="text-center">Date</th>
                </tr>
            </thead>
            <tbody class="table-group-divider">
                @foreach (var item in walletVM.History.OrderByDescending(x => x.Time))
                {
                    var rowClass = item.Type == "Deposit" ? "table-success" : "table-danger";
                    var iconClass = item.Type == "Deposit" ? "fa-arrow-down text-success" : "fa-arrow-up text-danger";

                    <tr class="@rowClass">
                        <td class="text-center">
                            <i class="fa @iconClass me-1"></i> @item.Type
                        </td>
                        <td class="text-center">@item.Amount.ToString("C")</td>
                        <td class="text-center">@item.Time.ToString("g")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

</div>

@code {
    public bool showModal = false;
    public string modalAction = "Deposit";

    private void OpenModal(string action)
    {
        modalAction = action;
        showModal = true;
    }
    private void HandleTransaction(decimal amount)
    {
        if (modalAction == "Deposit")
        {
            walletVM.Deposit(amount);
        }
        else
        {
            walletVM.Withdraw(amount);
        }
        showModal = false;
    }
}