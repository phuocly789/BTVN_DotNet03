@page "/admin/product-edit/{id}"
@inject ProductService _productService
@inject NavigationManager _nav
@layout HomeLayout

<EditForm Model="myModel" OnValidSubmit="HandleValidSubmit" class="w-75 mx-auto">
    <h3>Product Edit</h3>
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="id">ID</label>
        <input id="id" class="form-control" @bind="myModel.id" readonly disabled />
    </div>

    <div class="mb-3">
        <label for="name">Name</label>
        <input id="name" class="form-control" @bind="myModel.name" />
    </div>

    <div class="mb-3">
        <label for="price">Price</label>
        <input id="price" class="form-control" @bind="myModel.price" type="number" />
    </div>


    <div class="mb-3">
        <label for="img">Img</label>
        <input id="img" class="form-control" @bind="myModel.img" />
    </div>
    <div class="mb-3">
        <label for="img">Description</label>
        <input id="img" class="form-control" @bind="myModel.description" />
    </div>
    <div class="mb-3">
        <label for="type">Type</label>
        <select class="form-control" @bind="myModel.type">

            <option value="">Chose Type</option>
            <option value="Laptop">Laptop</option>
            <option value="Phone">Phone</option>
            <option value="Tablet">Tablet</option>
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Update</button>
    @if (isSubmit == 1)
    {
        <div class="alert alert-success mt-2">
            @_productService.responseMessage
        </div>
    }
    else if (isSubmit == 2)
    {
        <div class="alert alert-danger mt-2">
            @_productService.responseMessage

        </div>
    }

</EditForm>

@code {
    Timer timer;
    [Parameter] public string? id { get; set; }
    private Product myModel = new Product();
    public int isSubmit = 0;

    private async Task HandleValidSubmit()
    {
        // Xử lý submit ở đây
        //Gọi api http client
        isSubmit = await _productService.updateProduct(myModel, id);

        _nav.NavigateTo("/admin/product-management");


    }

    public override async Task SetParametersAsync(ParameterView param)
    {
        await base.SetParametersAsync(param);


        myModel = await _productService.getProductById(id);
        await InvokeAsync(StateHasChanged);

    }

}
